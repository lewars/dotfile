;;;; my init file
;;;; Author: Alistair Y. Lewars

;;; package setup
(require 'package)
; (add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/"))
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
; (add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages/"))
(package-initialize)

;; disable hard tabs.
(setq-default indent-tabs-mode nil)
(defun my-c-mode-hook ()
  (setq indent-tabs-mode nil))

(add-hook 'c-mode-hook 'my-c-mode-hook)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(blink-matching-paren t)
 '(column-number-mode 1)
 '(custom-safe-themes
   '("d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "a8245b7cc985a0610d71f9852e9f2767ad1b852c2bdea6f4aadc12cce9c4d6d0" default))
 '(display-fill-column-indicator-column 80)
 '(frame-background-mode nil)
 '(highlight-indent-guides-method 'bitmap)
 '(ido-mode 'both nil (ido))
 '(imenu-auto-rescan t)
 '(iswitchb-buffer-ignore '("^ " "*Buffer"))
 '(iswitchb-mode nil)
 '(iswitchb-use-frame-buffer-list nil)
 '(org-agenda-files '("~/tmp/2.org" "/home/slams/tmp/outline.txt"))
 '(package-selected-packages
   '(git-modes vterm dash copilot editorconfig quelpa-use-package quelpa helm-gtags flyspell-correct-helm multiple-cursors find-file-in-project projectile highlight-indent-guides iedit company elpy go-mode windresize flymake-yamllint python-black flymd flycheck-yamllint flymake-go flymake-go-staticcheck flymake-golangci flymake-gradle flymake-grammarly flymake-json flymake-python-pyflakes flymake-shell flycheck flycheck-aspell flycheck-color-mode-line dockerfile-mode terraform-doc terraform-mode yaml-mode use-package markdown-mode jedi groovy-mode anaconda-mode json-mode magit gitignore-mode browse-at-remote git-ps1-mode gitconfig-mode ibuffer-git rpm-spec-mode emojify tangotango-theme solarized-theme edit-server))
 '(show-paren-mode t)
 '(show-trailing-whitespace t)
 '(tool-bar-mode nil)
 '(warning-suppress-types '((comp)))
 '(which-function-mode 1)
 '(whitespace-style '(face trailing tabs spaces)))

(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :extend nil :stipple nil :background "#2e3436" :foreground "#eeeeec" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 115 :width normal :foundry "ADBO" :family "Source Code Pro"))))
 '(ido-only-match ((t (:foreground "SpringGreen3")))))

(if (display-graphic-p)
     '(server-mode t))

;; --

;; grammalry
(require 'flymake-grammarly)

;; auto-complete
(setq ac-auto-start t)
(setq ac-use-menu-map t)

;;; ibuffer
(global-set-key (kbd "C-x C-b") 'ibuffer)
(autoload 'ibuffer "ibuffer" "List buffers." t)
(setq ibuffer-saved-filter-groups
      (quote (("default"
	       ("dired" (mode . dired-mode))
	       ("perl" (mode . cperl-mode))
	       ("emacs" (or
			 (name . "^\\*scratch\\*$")
			 (name . "^\\*Messages\\*$")))
	       ("gnus" (or
			(mode . message-mode)
			(mode . bbdb-mode)
			(mode . mail-mode)
			(mode . gnus-group-mode)
			(mode . gnus-summary-mode)
			(mode . gnus-article-mode)
			(name . "^\\.bbdb$")
			(name . "^\\.newsrc-dribble")))))))

;; ;;; theme
(load-theme 'tango-dark t)
(setq inhibit-startup-message t)
(setq display-time-day-and-date t)
(display-time-mode t)
(setq fill-column 79)
(setq auto-fill-mode t)

;;; keybindings
(global-set-key "\C-cw" 'whitespace-mode)
(when (fboundp 'windmove-default-keybindings)
      (windmove-default-keybindings))
(global-set-key (kbd "S-C-<left>") 'shrink-window-horizontally)
(global-set-key (kbd "S-C-<right>") 'enlarge-window-horizontally)
(global-set-key (kbd "S-C-<up>") 'shrink-window)
(global-set-key (kbd "S-C-<down>") 'enlarge-window)

;; mighty mouse scroll
(setq mouse-wheel-scroll-amount '(0.01))

;; set key binding for ffap (find file at point)
(global-set-key (read-kbd-macro "C-x f") 'find-file-at-point)

;; reformat yaml on save
(defun frmt-yaml ()
  "Reformat YAML file with yq."
  (when (eq major-mode 'yaml-mode)
    (shell-command-to-string (format "yq e -P -i -v %s" buffer-file-name))
    (auto-revert-mode)))
(add-hook 'after-save-hook #'frmt-yaml)

;; reformat hcl on save
(defun frmt-hcl ()
  "Reformat HCL file with terraform fmt."
  (when (eq major-mode 'terraform-mode)
    (shell-command-to-string (format "terraform fmt %s" buffer-file-name))
    (auto-revert-mode)))
(add-hook 'after-save-hook #'frmt-hcl)
(add-hook 'terraform-mode-hook #'outline-minor-mode)

;; enable line number mode in gutter
(add-hook 'yaml-mode-hook 'display-line-numbers-mode)
;; (add-hook 'python-mode-hook 'display-line-numbers-mode)

;; fill column indicator column
;; (add-hook 'prog-mode-hook 'display-fill-column-indicator-mode)
(add-hook 'markdown-mode-hook 'display-fill-column-indicator-mode)
;; (add-hook 'python-mode-hook 'display-fill-column-indicator-mode)

;; ---

;;; aspell
(setq ispell-program-name "aspell")

;;; eshell
(setq eshell-prompt-function
      (lambda ()
	(concat (if (= (user-uid) 0) " #" " $") "> ")))

;;; org mode
(require 'org)
(add-to-list 'auto-mode-alist '("\\.org$" . org-mode))
(setq org-todo-keywords
      '((sequence "TODO" "IN-PROGRESS" "DELEGATED" "WAITING" "|" "DONE" "CLOSED")))
(setq org-log-done 'time)
(setq org-log-done 'note)
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)
(global-set-key (kbd "C-c c") #'org-capture)

;;; highlight indent guide
(add-hook 'yaml-mode-hook 'highlight-indent-guides-mode)
;; (add-hook 'python-mode-hook 'highlight-indent-guides-mode)

;; ---

;;; SVG
(add-to-list `auto-mode-alist '("\\.svg\\'" . xml-mode))

;;; Python
;; (add-hook 'python-mode-hook 'jedi:setup)
;; (setq jedi:complete-on-dot t)
;; (defun jedi:get-in-function-call-when-idle () (nil))
(define-key global-map (kbd "C-c o") 'iedit-mode)
;; (elpy-enable)

;;; Groovy
(autoload 'groovy-mode "groovy-mode" "Major mode for editing Groovy code." t)
(add-to-list 'auto-mode-alist '("\.groovy$" . groovy-mode))
(add-to-list 'interpreter-mode-alist '("groovy" . groovy-mode))
(add-hook 'groovy-mode-hook
          '(lambda ()
             (require 'groovy-electric)
             (groovy-electric-mode)))

;; --
;;; Markdown
(use-package markdown-mode
  :ensure t
  :commands (markdown-mode gfm-mode)
  :mode (("README\\.md\\'" . gfm-mode)
         ("\\.md\\'" . markdown-mode)
         ("\\.markdown\\'" . markdown-mode))
  :init (setq markdown-command "multimarkdown"))
(add-hook 'markdown-mode-hook 'flymake-grammarly-load)

;; git-modes
(use-package git-modes
  :ensure t
  :commands (gitconfig-mode)
  :mode ((".gitconfig\\'" . gitconfig-mode)))

;;; web-mode
;;(require 'web-mode)

;; (setq web-mode-engines-alist '(("django"    . "\\.html\\'")))
;; (setq web-mode-enable-current-column-highlight t)
;; (setq web-mode-enable-auto-closing t)
;; (setq web-mode-enable-auto-quoting t)
;; (setq web-mode-enable-auto-opening t)
;; (setq web-mode-enable-auto-pairing t)
;; (setq web-mode-enable-auto-indentation t)
;; (setq web-mode-enable-auto-quoting t)

;; (add-to-list 'auto-mode-alist '("\\.html\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.css\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
;; (add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
;; (setq web-mode-markup-indent-offset 2)
;; (setq web-mode-css-indent-offset 2)
;; (set-face-attribute 'web-mode-html-tag-face nil :foreground "#6dd6ff")
;; (set-face-attribute 'web-mode-html-attr-name-face nil :foreground "#e9b96d")
;; (set-face-attribute 'web-mode-html-attr-value-face nil :foreground "#a8f76a")
;; (add-hook 'web-mode-hook (lambda () (add-to-list 'ac-sources 'ac-source-css-property)))

;;; black formatter
(use-package python-black
  :demand t
  :after python
  :hook (python-mode . python-black-on-save-mode-enable-dwim))

(require 'multiple-cursors)
(global-set-key (kbd "C->") 'mc/mark-next-like-this)
(global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
(global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)
(global-set-key (kbd "C-C C-/") 'mc/mark-all-dwim)

(require 'helm)

(unless (package-installed-p 'quelpa)
  (with-temp-buffer
    (url-insert-file-contents "https://raw.githubusercontent.com/quelpa/quelpa/master/quelpa.el")
    (eval-buffer)
    (quelpa-self-upgrade)))

(require 'use-package)
(require 'quelpa-use-package)
(use-package copilot
  :quelpa (copilot :fetcher github
                   :repo "zerolfx/copilot.el"
                   :branch "main"
                   :files ("dist" "*.el")))
;; you can utilize :map :hook and :config to customize copilot
(add-hook 'prog-mode-hook 'copilot-mode)
(define-key copilot-completion-map (kbd "<tab>") 'copilot-accept-completion)
(define-key copilot-completion-map (kbd "TAB") 'copilot-accept-completion)

